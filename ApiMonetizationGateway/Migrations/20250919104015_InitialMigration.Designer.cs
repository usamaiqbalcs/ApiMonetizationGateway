// <auto-generated />
using System;
using ApiMonetizationGateway.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiMonetizationGateway.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250919104015_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiMonetizationGateway.Models.ApiUsageLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RequestSize")
                        .HasColumnType("int");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Timestamp");

                    b.HasIndex("CustomerId", "Timestamp");

                    b.ToTable("ApiUsageLogs");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey")
                        .IsUnique();

                    b.HasIndex("TierId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApiKey = "free_key",
                            CreatedAt = new DateTime(2025, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "free@example.com",
                            IsActive = true,
                            Name = "Free Tier Customer",
                            TierId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApiKey = "pro_key",
                            CreatedAt = new DateTime(2025, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pro@example.com",
                            IsActive = true,
                            Name = "Pro Tier Customer",
                            TierId = 2
                        });
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.MonthlyUsageSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("MonthYear")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("TierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TotalRequests")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TierId");

                    b.HasIndex("CustomerId", "MonthYear")
                        .IsUnique();

                    b.ToTable("MonthlyUsageSummaries");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.Tier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MonthlyQuota")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RateLimit")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Free tier with basic limits",
                            MonthlyQuota = 100,
                            Name = "Free",
                            Price = 0.00m,
                            RateLimit = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Professional tier with higher limits",
                            MonthlyQuota = 100000,
                            Name = "Pro",
                            Price = 50.00m,
                            RateLimit = 10
                        });
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.ApiUsageLog", b =>
                {
                    b.HasOne("ApiMonetizationGateway.Models.Customer", "Customer")
                        .WithMany("ApiUsageLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.Customer", b =>
                {
                    b.HasOne("ApiMonetizationGateway.Models.Tier", "Tier")
                        .WithMany("Customers")
                        .HasForeignKey("TierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tier");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.MonthlyUsageSummary", b =>
                {
                    b.HasOne("ApiMonetizationGateway.Models.Customer", "Customer")
                        .WithMany("MonthlySummaries")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiMonetizationGateway.Models.Tier", "Tier")
                        .WithMany()
                        .HasForeignKey("TierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Tier");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.Customer", b =>
                {
                    b.Navigation("ApiUsageLogs");

                    b.Navigation("MonthlySummaries");
                });

            modelBuilder.Entity("ApiMonetizationGateway.Models.Tier", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
